@model OgrenciKayit.Models.Ogrenci

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Düzenle</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OgrenciID)

    <div class="form-group">
        @Html.Label("Öğrenci Numarası", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OgrenciNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OgrenciNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Ad", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Soyad", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Soyad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Soyad, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Anne Adı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AnneAd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AnneAd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Baba Adı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BabaAd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BabaAd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("TC Kimlik Numarası", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TcKimlikNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TcKimlikNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Doğum Tarihi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DogumTarihi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DogumTarihi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Telefon", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Adres", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Uyruk", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uyrugu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Uyrugu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Organizasyon", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OrganizasyonID, new SelectList(ViewBag.parent, "ID", "Ad"), "Seçiniz", new { @class = "js-example-basic-single" })
            @Html.ValidationMessageFor(model => model.Bolum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Sınıf", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sinif, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sinif, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Müfredat", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mufredat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mufredat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Mezuniyet Tarihi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MezuniyetTarihi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MezuniyetTarihi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Bitirdiği Üniversite", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BitirdigiUniversite, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BitirdigiUniversite, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Yarıyılı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Yariyili, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.Yariyil)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Yariyili, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Eğitim Türü", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EgitimTuru, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EgitimTuru)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EgitimTuru, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Borçluluk Durumu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BorclulukDurumu, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EvetHayir)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BorclulukDurumu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Kulüp Üyeliği", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.KulupUyeligi, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EvetHayir)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.KulupUyeligi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Kayıtlanma Şekli", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KayitlanmaSekli, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KayitlanmaSekli, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Kayıtlanma Puanı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KayitlanmaPuani, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KayitlanmaPuani, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Kayıtlanma Yılı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KayitlanmaYili, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KayitlanmaYili, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Öğrenim Süresi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OgrSure, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OgrSure, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Kayıtlanma Dönemi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KayitDonemi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KayitDonemi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Lise Mezuniyeti", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LiseMezuniyeti, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LiseMezuniyeti, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Lise Mezuniyeti Puanı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LiseMezuniyetiPuani, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LiseMezuniyetiPuani, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Cinsiyet", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Cinsiyet, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.Cinsiyet)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Cinsiyet, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Askerlik Durumu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.AskerlikDurumu, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EvetHayir)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AskerlikDurumu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Engellilik Durumu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EngellilikDurumu, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EvetHayir)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EngellilikDurumu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Öğrencilik Hakkı", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OgrHak, EnumHelper.GetSelectList(typeof(OgrenciKayit.Models.EvetHayir)), "Seçiniz", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OgrHak, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Fotoğraf", htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(model => model.Fotograf, "File", new { type = "file", @style = "position: relative; padding-right:191px; padding-left:15px; top:5px" }) <br />


    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-success" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Geri Dön", "Index")
</div>


<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {

    <script src="~/Scripts/jquery-ui-1.13.1.min.js"></script>
    <script>
        "" >
            $(document).ready(function () {
                $(".datepicker").datepicker({
                    monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                    dayNamesMin: ["Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct"],
                    firstDay: 1,
                    dateFormat: "yy-mm-dd",
                    changemonth: true,
                    changeyear: true
                });
            });
    </script>

    <script>
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")

}
